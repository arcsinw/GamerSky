//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace GamerSky
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace GamerSky.GamerSky_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[57];
            _typeNameTable[0] = "Windows.UI.Color";
            _typeNameTable[1] = "System.ValueType";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Byte";
            _typeNameTable[4] = "GamerSky.Controls.GridSplitter";
            _typeNameTable[5] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[6] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[7] = "GamerSky.Controls.GridSplitter.GridResizeDirection";
            _typeNameTable[8] = "System.Enum";
            _typeNameTable[9] = "GamerSky.Controls.GridSplitter.GridResizeBehavior";
            _typeNameTable[10] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[11] = "Int32";
            _typeNameTable[12] = "GamerSky.Controls.GridSplitter.GripperCursorType";
            _typeNameTable[13] = "GamerSky.Controls.GridSplitter.SplitterCursorBehavior";
            _typeNameTable[14] = "GamerSky.Controls.ImageEx";
            _typeNameTable[15] = "Windows.UI.Xaml.Media.Imaging.DecodePixelType";
            _typeNameTable[16] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[17] = "Windows.UI.Xaml.Media.Stretch";
            _typeNameTable[18] = "Boolean";
            _typeNameTable[19] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[20] = "GamerSky.MainPage";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[22] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[23] = "GamerSky.Controls.RadioButton";
            _typeNameTable[24] = "Windows.UI.Xaml.Controls.RadioButton";
            _typeNameTable[25] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[26] = "GamerSky.Converters.ElementThemeToUriSourceConverter";
            _typeNameTable[27] = "GamerSky.Converters.ElementThemeToBoolConverter";
            _typeNameTable[28] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[29] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[30] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[31] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[32] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[33] = "Microsoft.Xaml.Interactivity.Trigger";
            _typeNameTable[34] = "Microsoft.Xaml.Interactivity.Behavior";
            _typeNameTable[35] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[36] = "String";
            _typeNameTable[37] = "GamerSky.Actions.NavigationAction";
            _typeNameTable[38] = "GamerSky.Actions.NavigationAction.PageType";
            _typeNameTable[39] = "GamerSky.Views.AppShell";
            _typeNameTable[40] = "Windows.UI.Xaml.Controls.Frame";
            _typeNameTable[41] = "System.Collections.Generic.List`1<GamerSky.Models.NavMenuItem>";
            _typeNameTable[42] = "GamerSky.Models.NavMenuItem";
            _typeNameTable[43] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[44] = "System.Type";
            _typeNameTable[45] = "GamerSky.ViewModels.GamePageViewModel";
            _typeNameTable[46] = "GamerSky.ViewModels.ViewModelBase";
            _typeNameTable[47] = "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>";
            _typeNameTable[48] = "System.Collections.ObjectModel.Collection`1<GamerSky.Models.GameSpecialDetail>";
            _typeNameTable[49] = "GamerSky.Models.GameSpecialDetail";
            _typeNameTable[50] = "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecial>";
            _typeNameTable[51] = "System.Collections.ObjectModel.Collection`1<GamerSky.Models.GameSpecial>";
            _typeNameTable[52] = "GamerSky.Models.GameSpecial";
            _typeNameTable[53] = "GamerSky.Views.GamePage";
            _typeNameTable[54] = "GamerSky.Views.MasterDetailPage";
            _typeNameTable[55] = "GamerSky.Views.NewsPage";
            _typeNameTable[56] = "GamerSky.Views.SettingsPage";

            _typeTable = new global::System.Type[57];
            _typeTable[0] = typeof(global::Windows.UI.Color);
            _typeTable[1] = typeof(global::System.ValueType);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Byte);
            _typeTable[4] = typeof(global::GamerSky.Controls.GridSplitter);
            _typeTable[5] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[7] = typeof(global::GamerSky.Controls.GridSplitter.GridResizeDirection);
            _typeTable[8] = typeof(global::System.Enum);
            _typeTable[9] = typeof(global::GamerSky.Controls.GridSplitter.GridResizeBehavior);
            _typeTable[10] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[11] = typeof(global::System.Int32);
            _typeTable[12] = typeof(global::GamerSky.Controls.GridSplitter.GripperCursorType);
            _typeTable[13] = typeof(global::GamerSky.Controls.GridSplitter.SplitterCursorBehavior);
            _typeTable[14] = typeof(global::GamerSky.Controls.ImageEx);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Media.Imaging.DecodePixelType);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[17] = typeof(global::Windows.UI.Xaml.Media.Stretch);
            _typeTable[18] = typeof(global::System.Boolean);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[20] = typeof(global::GamerSky.MainPage);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[23] = typeof(global::GamerSky.Controls.RadioButton);
            _typeTable[24] = typeof(global::Windows.UI.Xaml.Controls.RadioButton);
            _typeTable[25] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[26] = typeof(global::GamerSky.Converters.ElementThemeToUriSourceConverter);
            _typeTable[27] = typeof(global::GamerSky.Converters.ElementThemeToBoolConverter);
            _typeTable[28] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[29] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[32] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[33] = typeof(global::Microsoft.Xaml.Interactivity.Trigger);
            _typeTable[34] = typeof(global::Microsoft.Xaml.Interactivity.Behavior);
            _typeTable[35] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[36] = typeof(global::System.String);
            _typeTable[37] = typeof(global::GamerSky.Actions.NavigationAction);
            _typeTable[38] = typeof(global::GamerSky.Actions.NavigationAction.PageType);
            _typeTable[39] = typeof(global::GamerSky.Views.AppShell);
            _typeTable[40] = typeof(global::Windows.UI.Xaml.Controls.Frame);
            _typeTable[41] = typeof(global::System.Collections.Generic.List<global::GamerSky.Models.NavMenuItem>);
            _typeTable[42] = typeof(global::GamerSky.Models.NavMenuItem);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[44] = typeof(global::System.Type);
            _typeTable[45] = typeof(global::GamerSky.ViewModels.GamePageViewModel);
            _typeTable[46] = typeof(global::GamerSky.ViewModels.ViewModelBase);
            _typeTable[47] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>);
            _typeTable[48] = typeof(global::System.Collections.ObjectModel.Collection<global::GamerSky.Models.GameSpecialDetail>);
            _typeTable[49] = typeof(global::GamerSky.Models.GameSpecialDetail);
            _typeTable[50] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecial>);
            _typeTable[51] = typeof(global::System.Collections.ObjectModel.Collection<global::GamerSky.Models.GameSpecial>);
            _typeTable[52] = typeof(global::GamerSky.Models.GameSpecial);
            _typeTable[53] = typeof(global::GamerSky.Views.GamePage);
            _typeTable[54] = typeof(global::GamerSky.Views.MasterDetailPage);
            _typeTable[55] = typeof(global::GamerSky.Views.NewsPage);
            _typeTable[56] = typeof(global::GamerSky.Views.SettingsPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_4_GridSplitter() { return new global::GamerSky.Controls.GridSplitter(); }
        private object Activate_14_ImageEx() { return new global::GamerSky.Controls.ImageEx(); }
        private object Activate_20_MainPage() { return new global::GamerSky.MainPage(); }
        private object Activate_23_RadioButton() { return new global::GamerSky.Controls.RadioButton(); }
        private object Activate_26_ElementThemeToUriSourceConverter() { return new global::GamerSky.Converters.ElementThemeToUriSourceConverter(); }
        private object Activate_27_ElementThemeToBoolConverter() { return new global::GamerSky.Converters.ElementThemeToBoolConverter(); }
        private object Activate_29_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_32_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_35_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_37_NavigationAction() { return new global::GamerSky.Actions.NavigationAction(); }
        private object Activate_39_AppShell() { return new global::GamerSky.Views.AppShell(); }
        private object Activate_41_List() { return new global::System.Collections.Generic.List<global::GamerSky.Models.NavMenuItem>(); }
        private object Activate_42_NavMenuItem() { return new global::GamerSky.Models.NavMenuItem(); }
        private object Activate_45_GamePageViewModel() { return new global::GamerSky.ViewModels.GamePageViewModel(); }
        private object Activate_46_ViewModelBase() { return new global::GamerSky.ViewModels.ViewModelBase(); }
        private object Activate_47_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>(); }
        private object Activate_48_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GamerSky.Models.GameSpecialDetail>(); }
        private object Activate_49_GameSpecialDetail() { return new global::GamerSky.Models.GameSpecialDetail(); }
        private object Activate_50_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecial>(); }
        private object Activate_51_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GamerSky.Models.GameSpecial>(); }
        private object Activate_52_GameSpecial() { return new global::GamerSky.Models.GameSpecial(); }
        private object Activate_53_GamePage() { return new global::GamerSky.Views.GamePage(); }
        private object Activate_54_MasterDetailPage() { return new global::GamerSky.Views.MasterDetailPage(); }
        private object Activate_55_NewsPage() { return new global::GamerSky.Views.NewsPage(); }
        private object Activate_56_SettingsPage() { return new global::GamerSky.Views.SettingsPage(); }
        private void VectorAdd_29_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_35_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GamerSky.Models.NavMenuItem>)instance;
            var newItem = (global::GamerSky.Models.NavMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GamerSky.Models.GameSpecialDetail>)instance;
            var newItem = (global::GamerSky.Models.GameSpecialDetail)item;
            collection.Add(newItem);
        }
        private void VectorAdd_48_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GamerSky.Models.GameSpecialDetail>)instance;
            var newItem = (global::GamerSky.Models.GameSpecialDetail)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GamerSky.Models.GameSpecial>)instance;
            var newItem = (global::GamerSky.Models.GameSpecial)item;
            collection.Add(newItem);
        }
        private void VectorAdd_51_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GamerSky.Models.GameSpecial>)instance;
            var newItem = (global::GamerSky.Models.GameSpecial)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Windows.UI.Color
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 1:   //  System.ValueType
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 2:   //  Object
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Byte
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 4:   //  GamerSky.Controls.GridSplitter
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_4_GridSplitter;
                userType.AddMemberName("Element");
                userType.AddMemberName("ResizeDirection");
                userType.AddMemberName("ResizeBehavior");
                userType.AddMemberName("GripperForeground");
                userType.AddMemberName("ParentLevel");
                userType.AddMemberName("GripperCursor");
                userType.AddMemberName("GripperCustomCursorResource");
                userType.AddMemberName("CursorBehavior");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  GamerSky.Controls.GridSplitter.GridResizeDirection
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::GamerSky.Controls.GridSplitter.GridResizeDirection.Auto);
                userType.AddEnumValue("Columns", global::GamerSky.Controls.GridSplitter.GridResizeDirection.Columns);
                userType.AddEnumValue("Rows", global::GamerSky.Controls.GridSplitter.GridResizeDirection.Rows);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  System.Enum
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 9:   //  GamerSky.Controls.GridSplitter.GridResizeBehavior
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("BasedOnAlignment", global::GamerSky.Controls.GridSplitter.GridResizeBehavior.BasedOnAlignment);
                userType.AddEnumValue("CurrentAndNext", global::GamerSky.Controls.GridSplitter.GridResizeBehavior.CurrentAndNext);
                userType.AddEnumValue("PreviousAndCurrent", global::GamerSky.Controls.GridSplitter.GridResizeBehavior.PreviousAndCurrent);
                userType.AddEnumValue("PreviousAndNext", global::GamerSky.Controls.GridSplitter.GridResizeBehavior.PreviousAndNext);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Int32
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  GamerSky.Controls.GridSplitter.GripperCursorType
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::GamerSky.Controls.GridSplitter.GripperCursorType.Default);
                userType.AddEnumValue("Arrow", global::GamerSky.Controls.GridSplitter.GripperCursorType.Arrow);
                userType.AddEnumValue("Cross", global::GamerSky.Controls.GridSplitter.GripperCursorType.Cross);
                userType.AddEnumValue("Custom", global::GamerSky.Controls.GridSplitter.GripperCursorType.Custom);
                userType.AddEnumValue("Hand", global::GamerSky.Controls.GridSplitter.GripperCursorType.Hand);
                userType.AddEnumValue("Help", global::GamerSky.Controls.GridSplitter.GripperCursorType.Help);
                userType.AddEnumValue("IBeam", global::GamerSky.Controls.GridSplitter.GripperCursorType.IBeam);
                userType.AddEnumValue("SizeAll", global::GamerSky.Controls.GridSplitter.GripperCursorType.SizeAll);
                userType.AddEnumValue("SizeNortheastSouthwest", global::GamerSky.Controls.GridSplitter.GripperCursorType.SizeNortheastSouthwest);
                userType.AddEnumValue("SizeNorthSouth", global::GamerSky.Controls.GridSplitter.GripperCursorType.SizeNorthSouth);
                userType.AddEnumValue("SizeNorthwestSoutheast", global::GamerSky.Controls.GridSplitter.GripperCursorType.SizeNorthwestSoutheast);
                userType.AddEnumValue("SizeWestEast", global::GamerSky.Controls.GridSplitter.GripperCursorType.SizeWestEast);
                userType.AddEnumValue("UniversalNo", global::GamerSky.Controls.GridSplitter.GripperCursorType.UniversalNo);
                userType.AddEnumValue("UpArrow", global::GamerSky.Controls.GridSplitter.GripperCursorType.UpArrow);
                userType.AddEnumValue("Wait", global::GamerSky.Controls.GridSplitter.GripperCursorType.Wait);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  GamerSky.Controls.GridSplitter.SplitterCursorBehavior
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ChangeOnSplitterHover", global::GamerSky.Controls.GridSplitter.SplitterCursorBehavior.ChangeOnSplitterHover);
                userType.AddEnumValue("ChangeOnGripperHover", global::GamerSky.Controls.GridSplitter.SplitterCursorBehavior.ChangeOnGripperHover);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  GamerSky.Controls.ImageEx
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_14_ImageEx;
                userType.AddMemberName("DecodePixelHeight");
                userType.AddMemberName("DecodePixelType");
                userType.AddMemberName("DecodePixelWidth");
                userType.AddMemberName("NineGrid");
                userType.AddMemberName("Stretch");
                userType.AddMemberName("IsCacheEnabled");
                userType.AddMemberName("PlaceholderSource");
                userType.AddMemberName("PlaceholderStretch");
                userType.AddMemberName("Source");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Media.Imaging.DecodePixelType
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Windows.UI.Xaml.Media.Stretch
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  Boolean
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  GamerSky.MainPage
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  GamerSky.Controls.RadioButton
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.RadioButton"));
                userType.Activator = Activate_23_RadioButton;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  Windows.UI.Xaml.Controls.RadioButton
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  GamerSky.Converters.ElementThemeToUriSourceConverter
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_26_ElementThemeToUriSourceConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  GamerSky.Converters.ElementThemeToBoolConverter
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_27_ElementThemeToBoolConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 29:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_29_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger"));
                userType.Activator = Activate_32_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                xamlType = userType;
                break;

            case 33:   //  Microsoft.Xaml.Interactivity.Trigger
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior"));
                userType.SetContentPropertyName("Microsoft.Xaml.Interactivity.Trigger.Actions");
                userType.AddMemberName("Actions");
                xamlType = userType;
                break;

            case 34:   //  Microsoft.Xaml.Interactivity.Behavior
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 35:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_35_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 36:   //  String
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  GamerSky.Actions.NavigationAction
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_37_NavigationAction;
                userType.AddMemberName("SourcePage");
                userType.AddMemberName("NavigationType");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  GamerSky.Actions.NavigationAction.PageType
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Master", global::GamerSky.Actions.NavigationAction.PageType.Master);
                userType.AddEnumValue("Detail", global::GamerSky.Actions.NavigationAction.PageType.Detail);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  GamerSky.Views.AppShell
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_AppShell;
                userType.AddMemberName("MasterFrame");
                userType.AddMemberName("DetailFrame");
                userType.AddMemberName("Menus");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Windows.UI.Xaml.Controls.Frame
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  System.Collections.Generic.List`1<GamerSky.Models.NavMenuItem>
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_41_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  GamerSky.Models.NavMenuItem
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_NavMenuItem;
                userType.AddMemberName("Title");
                userType.AddMemberName("Icon");
                userType.AddMemberName("IsSelected");
                userType.AddMemberName("SelectedVis");
                userType.AddMemberName("DestPage");
                userType.AddMemberName("Arguments");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  System.Type
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  GamerSky.ViewModels.GamePageViewModel
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("GamerSky.ViewModels.ViewModelBase"));
                userType.Activator = Activate_45_GamePageViewModel;
                userType.AddMemberName("NewGames");
                userType.AddMemberName("RecentGames");
                userType.AddMemberName("GameSpecialList");
                userType.AddMemberName("NewSellingGames");
                userType.AddMemberName("MostExpectedGames");
                userType.AddMemberName("HighRankedGames");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  GamerSky.ViewModels.ViewModelBase
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_46_ViewModelBase;
                userType.AddMemberName("IsMobile");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GamerSky.Models.GameSpecialDetail>"));
                userType.CollectionAdd = VectorAdd_47_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  System.Collections.ObjectModel.Collection`1<GamerSky.Models.GameSpecialDetail>
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_Collection;
                userType.CollectionAdd = VectorAdd_48_Collection;
                xamlType = userType;
                break;

            case 49:   //  GamerSky.Models.GameSpecialDetail
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_49_GameSpecialDetail;
                userType.AddMemberName("Id");
                userType.AddMemberName("Subgroup");
                userType.AddMemberName("Title");
                userType.AddMemberName("DefaultPicUrl");
                userType.AddMemberName("Position");
                userType.AddMemberName("GsScore");
                userType.AddMemberName("LargeImage");
                userType.AddMemberName("Description");
                userType.AddMemberName("WantPlayCount");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecial>
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GamerSky.Models.GameSpecial>"));
                userType.CollectionAdd = VectorAdd_50_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  System.Collections.ObjectModel.Collection`1<GamerSky.Models.GameSpecial>
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_51_Collection;
                userType.CollectionAdd = VectorAdd_51_Collection;
                xamlType = userType;
                break;

            case 52:   //  GamerSky.Models.GameSpecial
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_52_GameSpecial;
                userType.AddMemberName("Description");
                userType.AddMemberName("HasSubList");
                userType.AddMemberName("Image");
                userType.AddMemberName("NodeId");
                userType.AddMemberName("SmallImage");
                userType.AddMemberName("Title");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  GamerSky.Views.GamePage
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_53_GamePage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  GamerSky.Views.MasterDetailPage
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_54_MasterDetailPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  GamerSky.Views.NewsPage
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_55_NewsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  GamerSky.Views.SettingsPage
                userType = new global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_56_SettingsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_0_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_1_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_1_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_2_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_2_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_3_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_3_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_4_GridSplitter_Element(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.Element;
        }
        private void set_4_GridSplitter_Element(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.Element = (global::Windows.UI.Xaml.UIElement)Value;
        }
        private object get_5_GridSplitter_ResizeDirection(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.ResizeDirection;
        }
        private void set_5_GridSplitter_ResizeDirection(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.ResizeDirection = (global::GamerSky.Controls.GridSplitter.GridResizeDirection)Value;
        }
        private object get_6_GridSplitter_ResizeBehavior(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.ResizeBehavior;
        }
        private void set_6_GridSplitter_ResizeBehavior(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.ResizeBehavior = (global::GamerSky.Controls.GridSplitter.GridResizeBehavior)Value;
        }
        private object get_7_GridSplitter_GripperForeground(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.GripperForeground;
        }
        private void set_7_GridSplitter_GripperForeground(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.GripperForeground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_8_GridSplitter_ParentLevel(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.ParentLevel;
        }
        private void set_8_GridSplitter_ParentLevel(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.ParentLevel = (global::System.Int32)Value;
        }
        private object get_9_GridSplitter_GripperCursor(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.GripperCursor;
        }
        private void set_9_GridSplitter_GripperCursor(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.GripperCursor = (global::GamerSky.Controls.GridSplitter.GripperCursorType)Value;
        }
        private object get_10_GridSplitter_GripperCustomCursorResource(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.GripperCustomCursorResource;
        }
        private void set_10_GridSplitter_GripperCustomCursorResource(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.GripperCustomCursorResource = (global::System.Int32)Value;
        }
        private object get_11_GridSplitter_CursorBehavior(object instance)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            return that.CursorBehavior;
        }
        private void set_11_GridSplitter_CursorBehavior(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.GridSplitter)instance;
            that.CursorBehavior = (global::GamerSky.Controls.GridSplitter.SplitterCursorBehavior)Value;
        }
        private object get_12_ImageEx_DecodePixelHeight(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.DecodePixelHeight;
        }
        private void set_12_ImageEx_DecodePixelHeight(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.DecodePixelHeight = (global::System.Int32)Value;
        }
        private object get_13_ImageEx_DecodePixelType(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.DecodePixelType;
        }
        private void set_13_ImageEx_DecodePixelType(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.DecodePixelType = (global::Windows.UI.Xaml.Media.Imaging.DecodePixelType)Value;
        }
        private object get_14_ImageEx_DecodePixelWidth(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.DecodePixelWidth;
        }
        private void set_14_ImageEx_DecodePixelWidth(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.DecodePixelWidth = (global::System.Int32)Value;
        }
        private object get_15_ImageEx_NineGrid(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.NineGrid;
        }
        private void set_15_ImageEx_NineGrid(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.NineGrid = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_16_ImageEx_Stretch(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.Stretch;
        }
        private void set_16_ImageEx_Stretch(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.Stretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_17_ImageEx_IsCacheEnabled(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.IsCacheEnabled;
        }
        private void set_17_ImageEx_IsCacheEnabled(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.IsCacheEnabled = (global::System.Boolean)Value;
        }
        private object get_18_ImageEx_PlaceholderSource(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.PlaceholderSource;
        }
        private void set_18_ImageEx_PlaceholderSource(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.PlaceholderSource = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_19_ImageEx_PlaceholderStretch(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.PlaceholderStretch;
        }
        private void set_19_ImageEx_PlaceholderStretch(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.PlaceholderStretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_20_ImageEx_Source(object instance)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            return that.Source;
        }
        private void set_20_ImageEx_Source(object instance, object Value)
        {
            var that = (global::GamerSky.Controls.ImageEx)instance;
            that.Source = (global::System.Object)Value;
        }
        private object get_21_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_21_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_22_Trigger_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Trigger)instance;
            return that.Actions;
        }
        private object get_23_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_23_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_24_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_24_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_25_Behavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactivity.Behavior)instance;
            return that.AssociatedObject;
        }
        private object get_26_NavigationAction_SourcePage(object instance)
        {
            var that = (global::GamerSky.Actions.NavigationAction)instance;
            return that.SourcePage;
        }
        private void set_26_NavigationAction_SourcePage(object instance, object Value)
        {
            var that = (global::GamerSky.Actions.NavigationAction)instance;
            that.SourcePage = (global::System.String)Value;
        }
        private object get_27_NavigationAction_NavigationType(object instance)
        {
            var that = (global::GamerSky.Actions.NavigationAction)instance;
            return that.NavigationType;
        }
        private void set_27_NavigationAction_NavigationType(object instance, object Value)
        {
            var that = (global::GamerSky.Actions.NavigationAction)instance;
            that.NavigationType = (global::GamerSky.Actions.NavigationAction.PageType)Value;
        }
        private object get_28_AppShell_MasterFrame(object instance)
        {
            var that = (global::GamerSky.Views.AppShell)instance;
            return that.MasterFrame;
        }
        private object get_29_AppShell_DetailFrame(object instance)
        {
            var that = (global::GamerSky.Views.AppShell)instance;
            return that.DetailFrame;
        }
        private object get_30_AppShell_Menus(object instance)
        {
            var that = (global::GamerSky.Views.AppShell)instance;
            return that.Menus;
        }
        private void set_30_AppShell_Menus(object instance, object Value)
        {
            var that = (global::GamerSky.Views.AppShell)instance;
            that.Menus = (global::System.Collections.Generic.List<global::GamerSky.Models.NavMenuItem>)Value;
        }
        private object get_31_NavMenuItem_Title(object instance)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            return that.Title;
        }
        private void set_31_NavMenuItem_Title(object instance, object Value)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_32_NavMenuItem_Icon(object instance)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            return that.Icon;
        }
        private void set_32_NavMenuItem_Icon(object instance, object Value)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            that.Icon = (global::System.String)Value;
        }
        private object get_33_NavMenuItem_IsSelected(object instance)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            return that.IsSelected;
        }
        private void set_33_NavMenuItem_IsSelected(object instance, object Value)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_34_NavMenuItem_SelectedVis(object instance)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            return that.SelectedVis;
        }
        private void set_34_NavMenuItem_SelectedVis(object instance, object Value)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            that.SelectedVis = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_35_NavMenuItem_DestPage(object instance)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            return that.DestPage;
        }
        private void set_35_NavMenuItem_DestPage(object instance, object Value)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            that.DestPage = (global::System.Type)Value;
        }
        private object get_36_NavMenuItem_Arguments(object instance)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            return that.Arguments;
        }
        private void set_36_NavMenuItem_Arguments(object instance, object Value)
        {
            var that = (global::GamerSky.Models.NavMenuItem)instance;
            that.Arguments = (global::System.Object)Value;
        }
        private object get_37_GamePageViewModel_NewGames(object instance)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            return that.NewGames;
        }
        private void set_37_GamePageViewModel_NewGames(object instance, object Value)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            that.NewGames = (global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>)Value;
        }
        private object get_38_GameSpecialDetail_Id(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.Id;
        }
        private void set_38_GameSpecialDetail_Id(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.Id = (global::System.Int32)Value;
        }
        private object get_39_GameSpecialDetail_Subgroup(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.Subgroup;
        }
        private void set_39_GameSpecialDetail_Subgroup(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.Subgroup = (global::System.String)Value;
        }
        private object get_40_GameSpecialDetail_Title(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.Title;
        }
        private void set_40_GameSpecialDetail_Title(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_41_GameSpecialDetail_DefaultPicUrl(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.DefaultPicUrl;
        }
        private void set_41_GameSpecialDetail_DefaultPicUrl(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.DefaultPicUrl = (global::System.String)Value;
        }
        private object get_42_GameSpecialDetail_Position(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.Position;
        }
        private void set_42_GameSpecialDetail_Position(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.Position = (global::System.String)Value;
        }
        private object get_43_GameSpecialDetail_GsScore(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.GsScore;
        }
        private void set_43_GameSpecialDetail_GsScore(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.GsScore = (global::System.String)Value;
        }
        private object get_44_GameSpecialDetail_LargeImage(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.LargeImage;
        }
        private void set_44_GameSpecialDetail_LargeImage(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.LargeImage = (global::System.String)Value;
        }
        private object get_45_GameSpecialDetail_Description(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.Description;
        }
        private void set_45_GameSpecialDetail_Description(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_46_GameSpecialDetail_WantPlayCount(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            return that.WantPlayCount;
        }
        private void set_46_GameSpecialDetail_WantPlayCount(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecialDetail)instance;
            that.WantPlayCount = (global::System.String)Value;
        }
        private object get_47_GamePageViewModel_RecentGames(object instance)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            return that.RecentGames;
        }
        private void set_47_GamePageViewModel_RecentGames(object instance, object Value)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            that.RecentGames = (global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>)Value;
        }
        private object get_48_GamePageViewModel_GameSpecialList(object instance)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            return that.GameSpecialList;
        }
        private void set_48_GamePageViewModel_GameSpecialList(object instance, object Value)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            that.GameSpecialList = (global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecial>)Value;
        }
        private object get_49_GameSpecial_Description(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            return that.Description;
        }
        private void set_49_GameSpecial_Description(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            that.Description = (global::System.String)Value;
        }
        private object get_50_GameSpecial_HasSubList(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            return that.HasSubList;
        }
        private void set_50_GameSpecial_HasSubList(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            that.HasSubList = (global::System.Boolean)Value;
        }
        private object get_51_GameSpecial_Image(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            return that.Image;
        }
        private void set_51_GameSpecial_Image(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            that.Image = (global::System.String)Value;
        }
        private object get_52_GameSpecial_NodeId(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            return that.NodeId;
        }
        private void set_52_GameSpecial_NodeId(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            that.NodeId = (global::System.String)Value;
        }
        private object get_53_GameSpecial_SmallImage(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            return that.SmallImage;
        }
        private void set_53_GameSpecial_SmallImage(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            that.SmallImage = (global::System.String)Value;
        }
        private object get_54_GameSpecial_Title(object instance)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            return that.Title;
        }
        private void set_54_GameSpecial_Title(object instance, object Value)
        {
            var that = (global::GamerSky.Models.GameSpecial)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_55_GamePageViewModel_NewSellingGames(object instance)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            return that.NewSellingGames;
        }
        private void set_55_GamePageViewModel_NewSellingGames(object instance, object Value)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            that.NewSellingGames = (global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>)Value;
        }
        private object get_56_GamePageViewModel_MostExpectedGames(object instance)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            return that.MostExpectedGames;
        }
        private void set_56_GamePageViewModel_MostExpectedGames(object instance, object Value)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            that.MostExpectedGames = (global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>)Value;
        }
        private object get_57_GamePageViewModel_HighRankedGames(object instance)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            return that.HighRankedGames;
        }
        private void set_57_GamePageViewModel_HighRankedGames(object instance, object Value)
        {
            var that = (global::GamerSky.ViewModels.GamePageViewModel)instance;
            that.HighRankedGames = (global::System.Collections.ObjectModel.ObservableCollection<global::GamerSky.Models.GameSpecialDetail>)Value;
        }
        private object get_58_ViewModelBase_IsMobile(object instance)
        {
            var that = (global::GamerSky.ViewModels.ViewModelBase)instance;
            return that.IsMobile;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::GamerSky.GamerSky_XamlTypeInfo.XamlMember xamlMember = null;
            global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Windows.UI.Color.A":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_0_Color_A;
                xamlMember.Setter = set_0_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_1_Color_B;
                xamlMember.Setter = set_1_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_2_Color_G;
                xamlMember.Setter = set_2_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_3_Color_R;
                xamlMember.Setter = set_3_Color_R;
                break;
            case "GamerSky.Controls.GridSplitter.Element":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Element", "Windows.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_GridSplitter_Element;
                xamlMember.Setter = set_4_GridSplitter_Element;
                break;
            case "GamerSky.Controls.GridSplitter.ResizeDirection":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "ResizeDirection", "GamerSky.Controls.GridSplitter.GridResizeDirection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_GridSplitter_ResizeDirection;
                xamlMember.Setter = set_5_GridSplitter_ResizeDirection;
                break;
            case "GamerSky.Controls.GridSplitter.ResizeBehavior":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "ResizeBehavior", "GamerSky.Controls.GridSplitter.GridResizeBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_GridSplitter_ResizeBehavior;
                xamlMember.Setter = set_6_GridSplitter_ResizeBehavior;
                break;
            case "GamerSky.Controls.GridSplitter.GripperForeground":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "GripperForeground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_GridSplitter_GripperForeground;
                xamlMember.Setter = set_7_GridSplitter_GripperForeground;
                break;
            case "GamerSky.Controls.GridSplitter.ParentLevel":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "ParentLevel", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_GridSplitter_ParentLevel;
                xamlMember.Setter = set_8_GridSplitter_ParentLevel;
                break;
            case "GamerSky.Controls.GridSplitter.GripperCursor":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "GripperCursor", "GamerSky.Controls.GridSplitter.GripperCursorType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_GridSplitter_GripperCursor;
                xamlMember.Setter = set_9_GridSplitter_GripperCursor;
                break;
            case "GamerSky.Controls.GridSplitter.GripperCustomCursorResource":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "GripperCustomCursorResource", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_GridSplitter_GripperCustomCursorResource;
                xamlMember.Setter = set_10_GridSplitter_GripperCustomCursorResource;
                break;
            case "GamerSky.Controls.GridSplitter.CursorBehavior":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.GridSplitter");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "CursorBehavior", "GamerSky.Controls.GridSplitter.SplitterCursorBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_GridSplitter_CursorBehavior;
                xamlMember.Setter = set_11_GridSplitter_CursorBehavior;
                break;
            case "GamerSky.Controls.ImageEx.DecodePixelHeight":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "DecodePixelHeight", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_ImageEx_DecodePixelHeight;
                xamlMember.Setter = set_12_ImageEx_DecodePixelHeight;
                break;
            case "GamerSky.Controls.ImageEx.DecodePixelType":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "DecodePixelType", "Windows.UI.Xaml.Media.Imaging.DecodePixelType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ImageEx_DecodePixelType;
                xamlMember.Setter = set_13_ImageEx_DecodePixelType;
                break;
            case "GamerSky.Controls.ImageEx.DecodePixelWidth":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "DecodePixelWidth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ImageEx_DecodePixelWidth;
                xamlMember.Setter = set_14_ImageEx_DecodePixelWidth;
                break;
            case "GamerSky.Controls.ImageEx.NineGrid":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "NineGrid", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ImageEx_NineGrid;
                xamlMember.Setter = set_15_ImageEx_NineGrid;
                break;
            case "GamerSky.Controls.ImageEx.Stretch":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Stretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ImageEx_Stretch;
                xamlMember.Setter = set_16_ImageEx_Stretch;
                break;
            case "GamerSky.Controls.ImageEx.IsCacheEnabled":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "IsCacheEnabled", "Boolean");
                xamlMember.Getter = get_17_ImageEx_IsCacheEnabled;
                xamlMember.Setter = set_17_ImageEx_IsCacheEnabled;
                break;
            case "GamerSky.Controls.ImageEx.PlaceholderSource":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "PlaceholderSource", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_ImageEx_PlaceholderSource;
                xamlMember.Setter = set_18_ImageEx_PlaceholderSource;
                break;
            case "GamerSky.Controls.ImageEx.PlaceholderStretch":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "PlaceholderStretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_ImageEx_PlaceholderStretch;
                xamlMember.Setter = set_19_ImageEx_PlaceholderStretch;
                break;
            case "GamerSky.Controls.ImageEx.Source":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Controls.ImageEx");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Source", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_ImageEx_Source;
                xamlMember.Setter = set_20_ImageEx_Source;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_21_Interaction_Behaviors;
                xamlMember.Setter = set_21_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactivity.Trigger.Actions":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Trigger");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_Trigger_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_23_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_24_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactivity.Behavior.AssociatedObject":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Behavior");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_25_Behavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "GamerSky.Actions.NavigationAction.SourcePage":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Actions.NavigationAction");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "SourcePage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_NavigationAction_SourcePage;
                xamlMember.Setter = set_26_NavigationAction_SourcePage;
                break;
            case "GamerSky.Actions.NavigationAction.NavigationType":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Actions.NavigationAction");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "NavigationType", "GamerSky.Actions.NavigationAction.PageType");
                xamlMember.Getter = get_27_NavigationAction_NavigationType;
                xamlMember.Setter = set_27_NavigationAction_NavigationType;
                break;
            case "GamerSky.Views.AppShell.MasterFrame":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Views.AppShell");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "MasterFrame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.Getter = get_28_AppShell_MasterFrame;
                xamlMember.SetIsReadOnly();
                break;
            case "GamerSky.Views.AppShell.DetailFrame":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Views.AppShell");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "DetailFrame", "Windows.UI.Xaml.Controls.Frame");
                xamlMember.Getter = get_29_AppShell_DetailFrame;
                xamlMember.SetIsReadOnly();
                break;
            case "GamerSky.Views.AppShell.Menus":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Views.AppShell");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Menus", "System.Collections.Generic.List`1<GamerSky.Models.NavMenuItem>");
                xamlMember.Getter = get_30_AppShell_Menus;
                xamlMember.Setter = set_30_AppShell_Menus;
                break;
            case "GamerSky.Models.NavMenuItem.Title":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.NavMenuItem");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_31_NavMenuItem_Title;
                xamlMember.Setter = set_31_NavMenuItem_Title;
                break;
            case "GamerSky.Models.NavMenuItem.Icon":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.NavMenuItem");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Icon", "String");
                xamlMember.Getter = get_32_NavMenuItem_Icon;
                xamlMember.Setter = set_32_NavMenuItem_Icon;
                break;
            case "GamerSky.Models.NavMenuItem.IsSelected":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.NavMenuItem");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.Getter = get_33_NavMenuItem_IsSelected;
                xamlMember.Setter = set_33_NavMenuItem_IsSelected;
                break;
            case "GamerSky.Models.NavMenuItem.SelectedVis":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.NavMenuItem");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "SelectedVis", "Windows.UI.Xaml.Visibility");
                xamlMember.Getter = get_34_NavMenuItem_SelectedVis;
                xamlMember.Setter = set_34_NavMenuItem_SelectedVis;
                break;
            case "GamerSky.Models.NavMenuItem.DestPage":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.NavMenuItem");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "DestPage", "System.Type");
                xamlMember.Getter = get_35_NavMenuItem_DestPage;
                xamlMember.Setter = set_35_NavMenuItem_DestPage;
                break;
            case "GamerSky.Models.NavMenuItem.Arguments":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.NavMenuItem");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Arguments", "Object");
                xamlMember.Getter = get_36_NavMenuItem_Arguments;
                xamlMember.Setter = set_36_NavMenuItem_Arguments;
                break;
            case "GamerSky.ViewModels.GamePageViewModel.NewGames":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.GamePageViewModel");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "NewGames", "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>");
                xamlMember.Getter = get_37_GamePageViewModel_NewGames;
                xamlMember.Setter = set_37_GamePageViewModel_NewGames;
                break;
            case "GamerSky.Models.GameSpecialDetail.Id":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Id", "Int32");
                xamlMember.Getter = get_38_GameSpecialDetail_Id;
                xamlMember.Setter = set_38_GameSpecialDetail_Id;
                break;
            case "GamerSky.Models.GameSpecialDetail.Subgroup":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Subgroup", "String");
                xamlMember.Getter = get_39_GameSpecialDetail_Subgroup;
                xamlMember.Setter = set_39_GameSpecialDetail_Subgroup;
                break;
            case "GamerSky.Models.GameSpecialDetail.Title":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_40_GameSpecialDetail_Title;
                xamlMember.Setter = set_40_GameSpecialDetail_Title;
                break;
            case "GamerSky.Models.GameSpecialDetail.DefaultPicUrl":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "DefaultPicUrl", "String");
                xamlMember.Getter = get_41_GameSpecialDetail_DefaultPicUrl;
                xamlMember.Setter = set_41_GameSpecialDetail_DefaultPicUrl;
                break;
            case "GamerSky.Models.GameSpecialDetail.Position":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Position", "String");
                xamlMember.Getter = get_42_GameSpecialDetail_Position;
                xamlMember.Setter = set_42_GameSpecialDetail_Position;
                break;
            case "GamerSky.Models.GameSpecialDetail.GsScore":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "GsScore", "String");
                xamlMember.Getter = get_43_GameSpecialDetail_GsScore;
                xamlMember.Setter = set_43_GameSpecialDetail_GsScore;
                break;
            case "GamerSky.Models.GameSpecialDetail.LargeImage":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "LargeImage", "String");
                xamlMember.Getter = get_44_GameSpecialDetail_LargeImage;
                xamlMember.Setter = set_44_GameSpecialDetail_LargeImage;
                break;
            case "GamerSky.Models.GameSpecialDetail.Description":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_45_GameSpecialDetail_Description;
                xamlMember.Setter = set_45_GameSpecialDetail_Description;
                break;
            case "GamerSky.Models.GameSpecialDetail.WantPlayCount":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecialDetail");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "WantPlayCount", "String");
                xamlMember.Getter = get_46_GameSpecialDetail_WantPlayCount;
                xamlMember.Setter = set_46_GameSpecialDetail_WantPlayCount;
                break;
            case "GamerSky.ViewModels.GamePageViewModel.RecentGames":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.GamePageViewModel");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "RecentGames", "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>");
                xamlMember.Getter = get_47_GamePageViewModel_RecentGames;
                xamlMember.Setter = set_47_GamePageViewModel_RecentGames;
                break;
            case "GamerSky.ViewModels.GamePageViewModel.GameSpecialList":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.GamePageViewModel");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "GameSpecialList", "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecial>");
                xamlMember.Getter = get_48_GamePageViewModel_GameSpecialList;
                xamlMember.Setter = set_48_GamePageViewModel_GameSpecialList;
                break;
            case "GamerSky.Models.GameSpecial.Description":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecial");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_49_GameSpecial_Description;
                xamlMember.Setter = set_49_GameSpecial_Description;
                break;
            case "GamerSky.Models.GameSpecial.HasSubList":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecial");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "HasSubList", "Boolean");
                xamlMember.Getter = get_50_GameSpecial_HasSubList;
                xamlMember.Setter = set_50_GameSpecial_HasSubList;
                break;
            case "GamerSky.Models.GameSpecial.Image":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecial");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Image", "String");
                xamlMember.Getter = get_51_GameSpecial_Image;
                xamlMember.Setter = set_51_GameSpecial_Image;
                break;
            case "GamerSky.Models.GameSpecial.NodeId":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecial");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "NodeId", "String");
                xamlMember.Getter = get_52_GameSpecial_NodeId;
                xamlMember.Setter = set_52_GameSpecial_NodeId;
                break;
            case "GamerSky.Models.GameSpecial.SmallImage":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecial");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "SmallImage", "String");
                xamlMember.Getter = get_53_GameSpecial_SmallImage;
                xamlMember.Setter = set_53_GameSpecial_SmallImage;
                break;
            case "GamerSky.Models.GameSpecial.Title":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.Models.GameSpecial");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_54_GameSpecial_Title;
                xamlMember.Setter = set_54_GameSpecial_Title;
                break;
            case "GamerSky.ViewModels.GamePageViewModel.NewSellingGames":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.GamePageViewModel");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "NewSellingGames", "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>");
                xamlMember.Getter = get_55_GamePageViewModel_NewSellingGames;
                xamlMember.Setter = set_55_GamePageViewModel_NewSellingGames;
                break;
            case "GamerSky.ViewModels.GamePageViewModel.MostExpectedGames":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.GamePageViewModel");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "MostExpectedGames", "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>");
                xamlMember.Getter = get_56_GamePageViewModel_MostExpectedGames;
                xamlMember.Setter = set_56_GamePageViewModel_MostExpectedGames;
                break;
            case "GamerSky.ViewModels.GamePageViewModel.HighRankedGames":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.GamePageViewModel");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "HighRankedGames", "System.Collections.ObjectModel.ObservableCollection`1<GamerSky.Models.GameSpecialDetail>");
                xamlMember.Getter = get_57_GamePageViewModel_HighRankedGames;
                xamlMember.Setter = set_57_GamePageViewModel_HighRankedGames;
                break;
            case "GamerSky.ViewModels.ViewModelBase.IsMobile":
                userType = (global::GamerSky.GamerSky_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GamerSky.ViewModels.ViewModelBase");
                xamlMember = new global::GamerSky.GamerSky_XamlTypeInfo.XamlMember(this, "IsMobile", "Boolean");
                xamlMember.Getter = get_58_ViewModelBase_IsMobile;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::GamerSky.GamerSky_XamlTypeInfo.XamlSystemBaseType
    {
        global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::GamerSky.GamerSky_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

